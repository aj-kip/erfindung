  set pc main
: erfindung_text data [
__XX_XXXXXX__X_XXXXXX___XX_XXXXXX__XXXXXXXXXX_______________X_______________________________
__X__________X______XX__XX__________________________________X_______________________________
__X__________X_X_____X__XX_____________XX___________________X_______________________________
__X__________X_X_____X__XX_____________XX___________________X_______________________________
__X__________X_X_____X__XX_____________XX___________________X_______________________________
__X__________X_X_____X__XX_____________XX___________________X_______________________________
__X__________X_X_____X__XX_____________XX___________________X_______________________________
__XX_XXXXXX__X__________XX_XXXX________XX___________________X_______________________________
__XX_________X__XX______X______________XX______X_XXXX__XXXX_X__X____X__X_XXXX__XXXXXX_______
__XX_________X____XX____X______________XX______X____X__X____X__X____X__X____X__X____X_______
__XX_________X______X___X______________XX______X____X__X____X__X____X__X____X__X____X_______
__XX_________X_______X__X______________XX______X____X__X____X__X____X__X____X__X____X_______
__XX_________X_______X__X______________________X____X__X____X__X____X__X____X__X____X_______
__XXXXXXXXX__X_______X__X__________XXXXXXXXXX__X____X__XXXXXX__XXXX_X__X____X__XXXX_X_______
____________________________________________________________________________________X_______
____________________________________________________________________________________X_______
____________________________________________________________________________________X_______
____________________________________________________________________________________X_______
X_X_X_X_X_X_X_X_X_X_X_X_X_X_X_XX__XX__XX__XX__XX__XXXXXXXXXXXXXXXXXXXXXXXX_____XXXXXX_______
____________ ]
: main set  x 92
       set  y 19
       set  z erfindung_text
       call upload # upload sprite
       call clear  # screen flush
       set  z a
       set  x 0
       set  y 0
       set  b 1 
       set  c 1
: loop call clear
       call draw  # draw sprite
       add  x b x # x + b -> x
       add  y c y
       # begin bounce code
         comp b x 100 # b <- (x < 100), integer is deducible
         skip b <     # pc == 72
             set pc inv-x # if (x >= 100) # 73
             set pc reg-x # if (x <  100) # 74
: inv-x  set b  -1                        # 75
         set pc post-x                    # 76
: reg-x  set b   1                        # 77
: post-x comp c y 100                     # 78
         skip c <
             set pc inv-y
             set pc reg-y
: inv-y  set c -1
         set pc post-y
: reg-y  set c  1
: post-y call wait # wait for frame
         set  pc loop
         # have to be careful not to up the cognitive load too much!
         #comp fp  x y a # explicit type needed!
         #comp int x y a # explicit integer
         #comp     x y a # defaults to integer
